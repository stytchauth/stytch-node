"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IntermediateSessions = void 0;
var _shared = require("../shared");
// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

// Request type for `discovery.intermediateSessions.exchange`.

// Response type for `discovery.intermediateSessions.exchange`.

class IntermediateSessions {
  constructor(fetchConfig) {
    this.fetchConfig = fetchConfig;
  }

  /**
   * Exchange an Intermediate Session for a fully realized
   * [Member Session](https://stytch.com/docs/b2b/api/session-object) in a desired
   * [Organization](https://stytch.com/docs/b2b/api/organization-object).
   * This operation consumes the Intermediate Session.
   *
   * This endpoint can be used to accept invites and create new members via domain matching.
   *
   * If the Member is required to complete MFA to log in to the Organization, the returned value of
   * `member_authenticated` will be `false`.
   * The `intermediate_session_token` will not be consumed and instead will be returned in the response.
   * The `intermediate_session_token` can be passed into the
   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the
   * MFA step and acquire a full member session.
   * The `intermediate_session_token` can also be used with the
   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)
   * or the
   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.
   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.
   * @param data {@link B2BDiscoveryIntermediateSessionsExchangeRequest}
   * @returns {@link B2BDiscoveryIntermediateSessionsExchangeResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  exchange(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/b2b/discovery/intermediate_sessions/exchange`,
      data
    });
  }
}
exports.IntermediateSessions = IntermediateSessions;