"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Email = void 0;
var _magic_links_email_discovery = require("./magic_links_email_discovery");
var _shared = require("../shared");
// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

// Request type for `magicLinks.email.invite`.

// Response type for `magicLinks.email.invite`.

// Request type for `magicLinks.email.loginOrSignup`.

// Response type for `magicLinks.email.loginOrSignup`.

class Email {
  constructor(fetchConfig) {
    this.fetchConfig = fetchConfig;
    this.discovery = new _magic_links_email_discovery.Discovery(this.fetchConfig);
  }

  /**
   * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a
   * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An
   * active Member will receive a login Email Magic Link.
   * @param data {@link B2BMagicLinksEmailLoginOrSignupRequest}
   * @returns {@link B2BMagicLinksEmailLoginOrSignupResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  loginOrSignup(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/b2b/magic_links/email/login_or_signup`,
      data
    });
  }

  /**
   * Send an invite email to a new Member to join an Organization. The Member will be created with an
   * `invited` status until they successfully authenticate. Sending invites to `pending` Members will update
   * their status to `invited`. Sending invites to already `active` Members will return an error.
   * @param data {@link B2BMagicLinksEmailInviteRequest}
   * @returns {@link B2BMagicLinksEmailInviteResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  invite(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/b2b/magic_links/email/invite`,
      data
    });
  }
}
exports.Email = Email;