"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Discovery = void 0;
var _shared = require("../shared");
// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

// Request type for `oauth.discovery.authenticate`.

// Response type for `oauth.discovery.authenticate`.

class Discovery {
  constructor(fetchConfig) {
    this.fetchConfig = fetchConfig;
  }

  /**
   * Authenticates the Discovery OAuth token and exchanges it for an Intermediate Session Token. Intermediate
   * Session Tokens can be used for various Discovery login flows and are valid for 10 minutes.
   * @param data {@link B2BOAuthDiscoveryAuthenticateRequest}
   * @returns {@link B2BOAuthDiscoveryAuthenticateResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  authenticate(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/b2b/oauth/discovery/authenticate`,
      data
    });
  }
}
exports.Discovery = Discovery;