"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Secrets = void 0;
require("../shared/method_options");
var _shared = require("../shared");
// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

class Secrets {
  constructor(fetchConfig) {
    this.fetchConfig = fetchConfig;
  }

  /**
   * @param data {@link ConnectedAppsClientsSecretsRotateStartRequest}
   * @returns {@link ConnectedAppsClientsSecretsRotateStartResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  rotateStart(data) {
    const headers = {};
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/connected_apps/clients/${data.client_id}/secrets/rotate/start`,
      headers,
      data: {}
    });
  }

  /**
   * @param data {@link ConnectedAppsClientsSecretsRotateCancelRequest}
   * @returns {@link ConnectedAppsClientsSecretsRotateCancelResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  rotateCancel(data) {
    const headers = {};
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/connected_apps/clients/${data.client_id}/secrets/rotate/cancel`,
      headers,
      data: {}
    });
  }

  /**
   * @param data {@link ConnectedAppsClientsSecretsRotateRequest}
   * @returns {@link ConnectedAppsClientsSecretsRotateResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  rotate(data) {
    const headers = {};
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/connected_apps/clients/${data.client_id}/secrets/rotate`,
      headers,
      data: {}
    });
  }
}
exports.Secrets = Secrets;