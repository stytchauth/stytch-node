"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sms = void 0;
var _shared = require("../shared");
// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

// Request type for `otps.sms.loginOrCreate`.

// Response type for `otps.sms.loginOrCreate`.

// Request type for `otps.sms.send`.

// Response type for `otps.sms.send`.

class Sms {
  constructor(fetchConfig) {
    this.fetchConfig = fetchConfig;
  }

  /**
   * Send a one-time passcode (OTP) to a user's phone number. If you'd like to create a user and send them a
   * passcode with one request, use our
   * [log in or create](https://stytch.com/docs/api/log-in-or-create-user-by-sms) endpoint.
   *
   * Note that sending another OTP code before the first has expired will invalidate the first code.
   *
   * ### Cost to send SMS OTP
   * Before configuring SMS or WhatsApp OTPs, please review how Stytch
   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your
   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).
   *
   * __Note:__ SMS to phone numbers outside of the US and Canada is disabled by default for customers who did
   * not use SMS prior to October 2023. If you're interested in sending international SMS, please reach out
   * to [support@stytch.com](mailto:support@stytch.com?subject=Enable%20international%20SMS).
   *
   * ### Add a phone number to an existing user
   *
   * This endpoint also allows you to add a new phone number to an existing Stytch User. Including a
   * `user_id`, `session_token`, or `session_jwt` in your Send one-time passcode by SMS request will add the
   * new, unverified phone number to the existing Stytch User. If the user successfully authenticates within
   * 5 minutes, the new phone number will be marked as verified and remain permanently on the existing Stytch
   * User. Otherwise, it will be removed from the User object, and any subsequent login requests using that
   * phone number will create a new User.
   *
   * ### Next steps
   *
   * Collect the OTP which was delivered to the user. Call
   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the
   * `phone_id` found in the response as the `method_id`.
   * @param data {@link OTPsSmsSendRequest}
   * @returns {@link OTPsSmsSendResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  send(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/otps/sms/send`,
      data
    });
  }

  /**
   * Send a One-Time Passcode (OTP) to a User using their phone number. If the phone number is not associated
   * with a user already, a user will be created.
   *
   * ### Cost to send SMS OTP
   * Before configuring SMS or WhatsApp OTPs, please review how Stytch
   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your
   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).
   *
   * __Note:__ SMS to phone numbers outside of the US and Canada is disabled by default for customers who did
   * not use SMS prior to October 2023. If you're interested in sending international SMS, please reach out
   * to [support@stytch.com](mailto:support@stytch.com?subject=Enable%20international%20SMS).
   *
   * ### Next steps
   *
   * Collect the OTP which was delivered to the User. Call
   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the
   * `phone_id` found in the response as the `method_id`.
   * @param data {@link OTPsSmsLoginOrCreateRequest}
   * @returns {@link OTPsSmsLoginOrCreateResponse}
   * @async
   * @throws A {@link StytchError} on a non-2xx response from the Stytch API
   * @throws A {@link RequestError} when the Stytch API cannot be reached
   */
  loginOrCreate(data) {
    return (0, _shared.request)(this.fetchConfig, {
      method: "POST",
      url: `/v1/otps/sms/login_or_create`,
      data
    });
  }
}
exports.Sms = Sms;